1. Main loop  + subpage
    https://chatgpt.com/c/68ff8959-0b0c-8322-ab12-4981f1ca43a8

2. all the values from method to db will use tuple 

# QuanLi_CuaHang_TV.NhomDoAn10.DH24TH1_Nhom1_ToTH2

#Download

- customtkinter

- messagebox <- Tkinter

- pip install Pillow

- pip install pyodbc
- pip install tkcalendar => import DateEntry





//L·ªói n√†y x·∫£y ra v√¨ b·∫°n ƒëang s·ª≠ d·ª•ng %s (c·ªßa MySQL) thay v√¨ ? (c·ªßa SQL Server/pyodbc). D∆∞·ªõi ƒë√¢y l√† code s·ª≠a l·ªói:

There isn't do - while in python => using while true: instead


üß® 2. Kh√¥ng bao gi·ªù g·ªçi mainloop() trong CTkToplevel

mainloop() ch·ªâ ƒë∆∞·ª£c g·ªçi m·ªôt l·∫ßn duy nh·∫•t trong to√†n ·ª©ng d·ª•ng (·ªü c·ª≠a s·ªï ch√≠nh).
G·ªçi add_product_window.mainloop() b√™n trong khi·∫øn v√≤ng l·∫∑p Tkinter ch·∫°y l·∫∑p th√™m t·∫ßng m·ªõi ‚Üí g√¢y l·ªói r·ªëi lo·∫°n t√†i nguy√™n v√† binding.


üîπ Quy t·∫Øc 3: D√πng sticky ƒë·ªÉ canh l·ªÅ

sticky cho ph√©p cƒÉn v·ªã tr√≠ trong √¥ (gi·ªëng text alignment).

Code	K·∫øt qu·∫£
sticky="w"	CƒÉn tr√°i (west)
sticky="e"	CƒÉn ph·∫£i (east)
sticky="nsew"	K√©o gi√£n c·∫£ 4 h∆∞·ªõng (fill to√†n √¥)


#b·∫£n ch·∫•t c·ªßa subform v√† c√°ch ho·∫°t ƒë·ªông c·ªßa main loop


#Ki·ªÉm tra ƒë·ªëi t∆∞·ª£ng tr∆∞·ªõc khi th√™m v√†o db

#c√≥ c√°ch n√†o ƒë·ªÉ kh√¥ng t·∫Øt db khi ƒëang s·ª≠e d·ª•ng cho ƒë·∫øn khi t·∫Øt kh√¥ng
#n√™n t·∫Øt hay n√™n m·ªü db khi s·ª≠ d·ª•ng s·∫Ω t·ªëi ∆∞u h∆°n

#s·ª≠a t√™n cho ƒë√∫ng

#s·ª≠a vnd -> l√™n c·ªôt thay v√¨ ƒë·ªÉ ·ªü ph·∫ßn gi√° tr·ªã ƒë∆∞·ª£c l∆∞u



# What did I learn from this project

# Tuple () => using ? s·∫Ω t·ª± ƒë·ªông th√™m '' v√† kh√¥ng ph√¢n bi·ªát hoa th∆∞·ªùng - ch·ªØ c√≥ d·∫•u 

‚ö†Ô∏è Nguy√™n nh√¢n ch√≠nh

Trong Python, khi b·∫°n truy·ªÅn m·ªôt gi√° tr·ªã duy nh·∫•t v√†o tuple m√† kh√¥ng c√≥ d·∫•u ph·∫©y (,),
th√¨ Python kh√¥ng hi·ªÉu ƒë√≥ l√† tuple, m√† ch·ªâ l√† m·ªôt gi√° tr·ªã ƒë∆°n l·∫ª.

‚û°Ô∏è Nghƒ©a l√† d√≤ng tr√™n th·ª±c ra kh√¥ng ph·∫£i tuple ‚Äî n√™n pyodbc nh·∫≠n sai ki·ªÉu d·ªØ li·ªáu, khi·∫øn SQL Server kh√¥ng hi·ªÉu ƒë√∫ng c√∫ ph√°p.

‚úÖ C√°ch s·ª≠a ƒë√∫ng

Th√™m d·∫•u ph·∫©y (,) ƒë·ªÉ t·∫°o tuple th·ª±c s·ª± c√≥ 1 ph·∫ßn t·ª≠:

self.cursor.execute(query, (filter_value,))

C√¢u h·ªèi r·∫•t hay ‚Äî v√† c√¢u tr·∫£ l·ªùi l√†:
üëâ C√≥, pyodbc t·ª± ƒë·ªông th√™m d·∫•u nh√°y ƒë∆°n ' ' xung quanh gi√° tr·ªã (k·ªÉ c·∫£ c√≥ kho·∫£ng tr·∫Øng ho·∫∑c k√Ω t·ª± ƒë·∫∑c bi·ªát), khi b·∫°n d√πng c√¢u truy v·∫•n c√≥ tham s·ªë ? ƒë√∫ng c√°ch.


#M·∫∑c ƒë·ªãnh c·ªßa sql server : l√† hoa hay th∆∞·ªùng
üß© 1. M·∫∑c ƒë·ªãnh trong SQL Server

Trong h·∫ßu h·∫øt c∆° s·ªü d·ªØ li·ªáu SQL Server, c√°c b·∫£ng ho·∫∑c c·ªôt ƒë∆∞·ª£c t·∫°o v·ªõi collation m·∫∑c ƒë·ªãnh l√† kh√¥ng ph√¢n bi·ªát hoa th∆∞·ªùng (case-insensitive).

SQL_Latin1_General_CP1_CI_AS
Trong ƒë√≥:

CI = Case Insensitive ‚Üí kh√¥ng ph√¢n bi·ªát hoa th∆∞·ªùng.

AS = Accent Sensitive ‚Üí c√≥ ph√¢n bi·ªát d·∫•u ti·∫øng Vi·ªát.

# ph·ªß ƒë·ªãnh gi√° tr·ªã  => using global

        self.false = not self.false
        ascending = self.false


#create event => onchange

# Nghiene cuuws autofill voi auto complete in entry


#trace_ad

H√†m trace_add() y√™u c·∫ßu m·ªôt con tr·ªè ƒë·∫øn h√†m (function reference),
kh√¥ng ph·∫£i k·∫øt qu·∫£ c·ªßa h√†m ƒë√≥.

‚ùå self.on_text_change(column=...) ‚Üí g·ªçi ngay, ch·∫°y m·ªôt l·∫ßn, tr·∫£ v·ªÅ None

‚úÖ lambda *args: self.on_text_change(column=...) ‚Üí ch∆∞a g·ªçi, ch·ªâ ch·∫°y khi c√≥ thay ƒë·ªïi

#db

üìò T√≥m l·∫°i
Nguy√™n nh√¢n	H∆∞·ªõng x·ª≠ l√Ω
G·ªçi db.conn.close() trong s·ª± ki·ªán ƒëang l·∫∑p	‚ùå Sai
ƒê√≥ng connection sau m·ªói truy v·∫•n	‚ùå Sai
ƒê√≥ng connection khi app tho√°t	‚úÖ ƒê√∫ng
M·ªü connection m·ªôt l·∫ßn, d√πng l·∫°i nhi·ªÅu l·∫ßn	‚úÖ ƒê√∫ng

%A ‚Üí nghƒ©a l√†: k·∫øt th√∫c b·∫±ng ch·ªØ A

A% ‚Üí nghƒ©a l√†: b·∫Øt ƒë·∫ßu b·∫±ng ch·ªØ A

%A% ‚Üí nghƒ©a l√†: ch·ª©a ch·ªØ A ·ªü b·∫•t k·ª≥ v·ªã tr√≠ n√†o

‚û° Khi ƒë√≥:

HD01 xu·∫•t hi·ªán 2 l·∫ßn v√¨ h√≥a ƒë∆°n ƒë√≥ c√≥ 2 s·∫£n ph·∫©m kh√°c nhau (SP01, SP02).

Nh∆∞ng c·∫∑p (HD01, SP01) ch·ªâ c√≥ m·ªôt d√≤ng duy nh·∫•t, ƒë·∫£m b·∫£o t√≠nh duy nh·∫•t c·ªßa chi ti·∫øt.

# to refresh anywhere => create refresh_data()


# day 
today_str = date.today().strftime('%Y-%m-%d')


# get value from pages

app -> pages[] = new page() 

app = self 

app.pages[your required page].properties.properties


#path 
 folder_path = os.path.join("src", "assets", "QR_Image")
        os.makedirs(folder_path, exist_ok=True) #Create if the folder doesn't exist


# Lambda => can add params != callback cannnot add params 


#
#Tr∆∞·ªõc khi g·ªçi th√¨ ph·∫£i xo√° widget
#sau khi th√™m xo√° s·ª≠a sp th√¨ g·ªçi l·∫°i h√†m _render_product
#self.app.pages[sales]._render_product()